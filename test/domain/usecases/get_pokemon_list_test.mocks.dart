// Mocks generated by Mockito 5.0.11 from annotations
// in pokedex/test/domain/usecases/get_pokemon_list_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:fpdart/src/either.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:pokedex/core/errors/failures.dart' as _i5;
import 'package:pokedex/domain/entities/api/api_pagination.dart' as _i9;
import 'package:pokedex/domain/entities/api/api_resource.dart' as _i7;
import 'package:pokedex/domain/entities/pokemon/pokemon.dart' as _i6;
import 'package:pokedex/domain/entities/pokemon/pokemon_ability.dart' as _i10;
import 'package:pokedex/domain/entities/pokemon/pokemon_species.dart' as _i8;
import 'package:pokedex/domain/repositories/pokemon_repository.dart' as _i3;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeEither<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

/// A class which mocks [PokemonRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockPokemonRepository extends _i1.Mock implements _i3.PokemonRepository {
  MockPokemonRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.Pokemon>> getPokemon(
          _i7.ApiResource? pokemon) =>
      (super.noSuchMethod(Invocation.method(#getPokemon, [pokemon]),
              returnValue: Future<_i2.Either<_i5.Failure, _i6.Pokemon>>.value(
                  _FakeEither<_i5.Failure, _i6.Pokemon>()))
          as _i4.Future<_i2.Either<_i5.Failure, _i6.Pokemon>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i8.PokemonSpecies>> getPokemonSpecies(
          _i7.ApiResource? species) =>
      (super.noSuchMethod(Invocation.method(#getPokemonSpecies, [species]),
              returnValue:
                  Future<_i2.Either<_i5.Failure, _i8.PokemonSpecies>>.value(
                      _FakeEither<_i5.Failure, _i8.PokemonSpecies>()))
          as _i4.Future<_i2.Either<_i5.Failure, _i8.PokemonSpecies>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.Pokemon>> searchPokemon(
          int? id, String? name) =>
      (super.noSuchMethod(Invocation.method(#searchPokemon, [id, name]),
              returnValue: Future<_i2.Either<_i5.Failure, _i6.Pokemon>>.value(
                  _FakeEither<_i5.Failure, _i6.Pokemon>()))
          as _i4.Future<_i2.Either<_i5.Failure, _i6.Pokemon>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i9.ApiPagination>> getPokemonList(
          String? url) =>
      (super.noSuchMethod(Invocation.method(#getPokemonList, [url]),
          returnValue: Future<_i2.Either<_i5.Failure, _i9.ApiPagination>>.value(
              _FakeEither<_i5.Failure, _i9.ApiPagination>())) as _i4
          .Future<_i2.Either<_i5.Failure, _i9.ApiPagination>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i10.PokemonAbility>> getPokemonAbility(
          _i7.ApiResource? ability) =>
      (super.noSuchMethod(Invocation.method(#getPokemonAbility, [ability]),
              returnValue:
                  Future<_i2.Either<_i5.Failure, _i10.PokemonAbility>>.value(
                      _FakeEither<_i5.Failure, _i10.PokemonAbility>()))
          as _i4.Future<_i2.Either<_i5.Failure, _i10.PokemonAbility>>);
}
