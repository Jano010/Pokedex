// Mocks generated by Mockito 5.0.11 from annotations
// in pokedex/test/data/repositories/pokemon_repository_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i7;

import 'package:mockito/mockito.dart' as _i1;
import 'package:pokedex/core/utils/network_info.dart' as _i9;
import 'package:pokedex/data/datasource/pokemon_remote_data_source.dart' as _i6;
import 'package:pokedex/domain/entities/api/api_pagination.dart' as _i4;
import 'package:pokedex/domain/entities/api/api_resource.dart' as _i8;
import 'package:pokedex/domain/entities/pokemon/pokemon.dart' as _i2;
import 'package:pokedex/domain/entities/pokemon/pokemon_ability.dart' as _i5;
import 'package:pokedex/domain/entities/pokemon/pokemon_species.dart' as _i3;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakePokemon extends _i1.Fake implements _i2.Pokemon {}

class _FakePokemonSpecies extends _i1.Fake implements _i3.PokemonSpecies {}

class _FakeApiPagination extends _i1.Fake implements _i4.ApiPagination {}

class _FakePokemonAbility extends _i1.Fake implements _i5.PokemonAbility {}

/// A class which mocks [PokemonRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockPokemonRemoteDataSource extends _i1.Mock
    implements _i6.PokemonRemoteDataSource {
  MockPokemonRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i2.Pokemon> getPokemon(_i8.ApiResource? pokemon) =>
      (super.noSuchMethod(Invocation.method(#getPokemon, [pokemon]),
              returnValue: Future<_i2.Pokemon>.value(_FakePokemon()))
          as _i7.Future<_i2.Pokemon>);
  @override
  _i7.Future<_i2.Pokemon> searchPokemon(int? id, String? name) =>
      (super.noSuchMethod(Invocation.method(#searchPokemon, [id, name]),
              returnValue: Future<_i2.Pokemon>.value(_FakePokemon()))
          as _i7.Future<_i2.Pokemon>);
  @override
  _i7.Future<_i3.PokemonSpecies> getPokemonSpeceies(_i8.ApiResource? species) =>
      (super.noSuchMethod(Invocation.method(#getPokemonSpeceies, [species]),
              returnValue:
                  Future<_i3.PokemonSpecies>.value(_FakePokemonSpecies()))
          as _i7.Future<_i3.PokemonSpecies>);
  @override
  _i7.Future<_i4.ApiPagination> getPokemonList(String? url) =>
      (super.noSuchMethod(Invocation.method(#getPokemonList, [url]),
              returnValue:
                  Future<_i4.ApiPagination>.value(_FakeApiPagination()))
          as _i7.Future<_i4.ApiPagination>);
  @override
  _i7.Future<_i5.PokemonAbility> getPokemonAbility(_i8.ApiResource? ability) =>
      (super.noSuchMethod(Invocation.method(#getPokemonAbility, [ability]),
              returnValue:
                  Future<_i5.PokemonAbility>.value(_FakePokemonAbility()))
          as _i7.Future<_i5.PokemonAbility>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i9.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<bool> get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected),
          returnValue: Future<bool>.value(false)) as _i7.Future<bool>);
}
